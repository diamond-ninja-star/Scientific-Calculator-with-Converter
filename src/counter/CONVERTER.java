package counter;

import java.lang.*;
//import function to convert unit
import functions.Unit;

public class CONVERTER extends javax.swing.JFrame 
{   
    Unit object = new Unit();
    //Declaring Flags
    
    public int converterDecimalPointClickFlag=0,converterNegativeClickFlag=0;
    
    //Declaring Variables
    
    public String converterUnitString , converterFromString , converterToString ;
    public String converterInputString , converterOutputString ;
    public double converterInput , converterOutput;

    
    //Initializing Unit list
    
    public String[] converterUnitComboBoxList = new String[]{"(Select a unit)","Torque","Angle","Density","Time","Temperature","Speed","Weight","Volume","Length","Pressure","Area"};
    
    
    //Initializing Items List
    
    //Empty
    public String[] converterEmptyItemList = new String[]{""};
    //Torque
    public String[] converterTorqueItemList = new String[]{"Newton Meter","Meter Kilogram"};
    //Angle
    public String[] converterAngleItemList = new String[]{"Degree","Radian"};
    //Density
    public String[] converterDensityItemList = new String[]{"Kilogram Per Meter Cube","Gram Per Centimeter Cube","Pound Per Foot Cube"};
    //Time
    public String[] converterTimeItemList = new String[]{"Day","Hour","Minute","Second"};
    //Temperature
    public String[] converterTemperatureItemList = new String[]{"Celsius","Fahrenheit","Kelvin"};
    //Speed
    public String[] converterSpeedItemList = new String[]{"Kilometer Per Hour","Mile Per Hour","Meter Per Second"};
    //Weight
    public String[] converterWeightItemList = new String[]{"Kilogram","Gram","Pound"};
    //Volume
    public String[] converterVolumeItemList = new String[]{"Liter","Cubic Meter","Cubic Centimeter","Cubic Foot","Cubic Inch"};
    //Length
    public String[] converterLengthItemList = new String[] {"Kilometer","Meter","Centimeter","Mile","Foot","Inch"};
    //Pressure
    public String[] converterPressureItemList = new String[] {"Physical Atmosphere","bar","Kilo Pascal","mmHg"};
    //Area
    public String[] converterAreaItemList = new String[] {"Square Meter","Square Centimeter","Square Mile","Square Inch","Square Foot"};
   
    /**
     * Creates new form CONVERTER
     */
    public CONVERTER()
    {
        initComponents();
        getContentPane().setBackground(java.awt.Color.MAGENTA);
        //Initialize the Unit combo box model list with constructor
        //It will help to initialize the value of model at the starting of converter JFrame
        converterUnitComboBox.setModel( new javax.swing.DefaultComboBoxModel<>(converterUnitComboBoxList));       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        converterBackToMenuButton = new javax.swing.JButton();
        converterInputTextField = new javax.swing.JTextField();
        converterOutputTextField = new javax.swing.JTextField();
        converterUnitLabel = new javax.swing.JLabel();
        converterFromLabel = new javax.swing.JLabel();
        converterToLabel = new javax.swing.JLabel();
        converterUnitComboBox = new javax.swing.JComboBox<>();
        converterFromComboBox = new javax.swing.JComboBox<>();
        converterToComboBox = new javax.swing.JComboBox<>();
        converterConvertButton = new javax.swing.JButton();
        converterOneButton = new javax.swing.JButton();
        converterThreeButton = new javax.swing.JButton();
        converterTwoButton = new javax.swing.JButton();
        converterFourButton = new javax.swing.JButton();
        converterFiveButton = new javax.swing.JButton();
        converterSixButton = new javax.swing.JButton();
        converterSevenButton = new javax.swing.JButton();
        converterEightButton = new javax.swing.JButton();
        converterNineButton = new javax.swing.JButton();
        converterZeroButton = new javax.swing.JButton();
        converterDecimalPointButton = new javax.swing.JButton();
        converterBackspaceButton = new javax.swing.JButton();
        converterClearButton = new javax.swing.JButton();
        converterNegativeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CONVERTER");
        setBackground(new java.awt.Color(0, 0, 0));
        setFocusable(false);
        setForeground(new java.awt.Color(0, 0, 0));
        setName("CONVERTER_Frame"); // NOI18N

        converterBackToMenuButton.setBackground(new java.awt.Color(0, 0, 0));
        converterBackToMenuButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterBackToMenuButton.setForeground(new java.awt.Color(0, 255, 0));
        converterBackToMenuButton.setText("MENU");
        converterBackToMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterBackToMenuButtonActionPerformed(evt);
            }
        });

        converterInputTextField.setEditable(false);
        converterInputTextField.setBackground(new java.awt.Color(0, 0, 255));
        converterInputTextField.setForeground(new java.awt.Color(0, 255, 0));
        converterInputTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterInputTextFieldActionPerformed(evt);
            }
        });

        converterOutputTextField.setEditable(false);
        converterOutputTextField.setBackground(new java.awt.Color(0, 0, 255));
        converterOutputTextField.setForeground(new java.awt.Color(0, 255, 0));

        converterUnitLabel.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterUnitLabel.setText("Unit");

        converterFromLabel.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterFromLabel.setText("From");

        converterToLabel.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterToLabel.setText("To");

        converterUnitComboBox.setBackground(new java.awt.Color(0, 0, 255));
        converterUnitComboBox.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterUnitComboBox.setForeground(new java.awt.Color(0, 255, 0));
        converterUnitComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        converterUnitComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterUnitComboBoxActionPerformed(evt);
            }
        });

        converterFromComboBox.setBackground(new java.awt.Color(0, 0, 255));
        converterFromComboBox.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterFromComboBox.setForeground(new java.awt.Color(0, 255, 0));
        converterFromComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        converterFromComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterFromComboBoxActionPerformed(evt);
            }
        });

        converterToComboBox.setBackground(new java.awt.Color(0, 0, 255));
        converterToComboBox.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterToComboBox.setForeground(new java.awt.Color(0, 255, 0));
        converterToComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        converterToComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterToComboBoxActionPerformed(evt);
            }
        });

        converterConvertButton.setBackground(new java.awt.Color(0, 0, 0));
        converterConvertButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterConvertButton.setForeground(new java.awt.Color(0, 255, 0));
        converterConvertButton.setText("Convert");
        converterConvertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterConvertButtonActionPerformed(evt);
            }
        });

        converterOneButton.setBackground(new java.awt.Color(0, 0, 0));
        converterOneButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterOneButton.setForeground(new java.awt.Color(0, 255, 0));
        converterOneButton.setText("1");
        converterOneButton.setBorder(null);
        converterOneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterOneButtonActionPerformed(evt);
            }
        });

        converterThreeButton.setBackground(new java.awt.Color(0, 0, 0));
        converterThreeButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterThreeButton.setForeground(new java.awt.Color(0, 255, 0));
        converterThreeButton.setText("3");
        converterThreeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterThreeButtonActionPerformed(evt);
            }
        });

        converterTwoButton.setBackground(new java.awt.Color(0, 0, 0));
        converterTwoButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterTwoButton.setForeground(new java.awt.Color(0, 255, 0));
        converterTwoButton.setText("2");
        converterTwoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterTwoButtonActionPerformed(evt);
            }
        });

        converterFourButton.setBackground(new java.awt.Color(0, 0, 0));
        converterFourButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterFourButton.setForeground(new java.awt.Color(0, 255, 0));
        converterFourButton.setText("4");
        converterFourButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterFourButtonActionPerformed(evt);
            }
        });

        converterFiveButton.setBackground(new java.awt.Color(0, 0, 0));
        converterFiveButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterFiveButton.setForeground(new java.awt.Color(0, 255, 0));
        converterFiveButton.setText("5");
        converterFiveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterFiveButtonActionPerformed(evt);
            }
        });

        converterSixButton.setBackground(new java.awt.Color(0, 0, 0));
        converterSixButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterSixButton.setForeground(new java.awt.Color(0, 255, 0));
        converterSixButton.setText("6");
        converterSixButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterSixButtonActionPerformed(evt);
            }
        });

        converterSevenButton.setBackground(new java.awt.Color(0, 0, 0));
        converterSevenButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterSevenButton.setForeground(new java.awt.Color(0, 255, 0));
        converterSevenButton.setText("7");
        converterSevenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterSevenButtonActionPerformed(evt);
            }
        });

        converterEightButton.setBackground(new java.awt.Color(0, 0, 0));
        converterEightButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterEightButton.setForeground(new java.awt.Color(0, 255, 0));
        converterEightButton.setText("8");
        converterEightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterEightButtonActionPerformed(evt);
            }
        });

        converterNineButton.setBackground(new java.awt.Color(0, 0, 0));
        converterNineButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterNineButton.setForeground(new java.awt.Color(0, 255, 0));
        converterNineButton.setText("9");
        converterNineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterNineButtonActionPerformed(evt);
            }
        });

        converterZeroButton.setBackground(new java.awt.Color(0, 0, 0));
        converterZeroButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterZeroButton.setForeground(new java.awt.Color(0, 255, 0));
        converterZeroButton.setText("0");
        converterZeroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterZeroButtonActionPerformed(evt);
            }
        });

        converterDecimalPointButton.setBackground(new java.awt.Color(0, 0, 0));
        converterDecimalPointButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterDecimalPointButton.setForeground(new java.awt.Color(0, 255, 0));
        converterDecimalPointButton.setText(".");
        converterDecimalPointButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterDecimalPointButtonActionPerformed(evt);
            }
        });

        converterBackspaceButton.setBackground(new java.awt.Color(0, 0, 0));
        converterBackspaceButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterBackspaceButton.setForeground(new java.awt.Color(51, 255, 0));
        converterBackspaceButton.setText(" Backspace");
        converterBackspaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterBackspaceButtonActionPerformed(evt);
            }
        });

        converterClearButton.setBackground(new java.awt.Color(0, 0, 0));
        converterClearButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterClearButton.setForeground(new java.awt.Color(0, 255, 0));
        converterClearButton.setText("Clear");
        converterClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterClearButtonActionPerformed(evt);
            }
        });

        converterNegativeButton.setBackground(new java.awt.Color(0, 0, 0));
        converterNegativeButton.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        converterNegativeButton.setForeground(new java.awt.Color(0, 255, 0));
        converterNegativeButton.setText("-");
        converterNegativeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterNegativeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(converterBackToMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(converterInputTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                            .addComponent(converterOutputTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(converterThreeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(converterOneButton, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(converterTwoButton, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(converterFourButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(converterFiveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(converterSixButton, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(converterNineButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                .addComponent(converterSevenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(converterEightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(converterZeroButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(converterNegativeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                            .addComponent(converterDecimalPointButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(converterBackspaceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(converterConvertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(converterClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(converterUnitLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(converterUnitComboBox, 0, 249, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(converterFromComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(converterToComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(converterFromLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(converterToLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(converterOneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(converterFourButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(converterSevenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(converterZeroButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(converterBackspaceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(converterTwoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(converterFiveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(converterEightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(converterDecimalPointButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(converterClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(converterThreeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(converterSixButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(converterNineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(converterNegativeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(converterConvertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(converterInputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(converterOutputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(converterBackToMenuButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(converterUnitLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(converterFromLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(converterToLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(converterUnitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(converterFromComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(converterToComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(190, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(844, 493));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void converterInputTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterInputTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_converterInputTextFieldActionPerformed

    private void converterBackToMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterBackToMenuButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Menu object = new Menu();
        object.setVisible(true);
    }//GEN-LAST:event_converterBackToMenuButtonActionPerformed

    private void converterToComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterToComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_converterToComboBoxActionPerformed

    private void converterConvertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterConvertButtonActionPerformed
        // TODO add your handling code here:
        int checkIsInputEmptyOrNotFlag = 0;
        String checkIsInputEmptyOrNot = converterInputTextField.getText();
        if(checkIsInputEmptyOrNot=="")
        {
            checkIsInputEmptyOrNotFlag = 1;
        }
        else
        {
            try
            {
                 String s = converterInputTextField.getText();
                 String s1=converterUnitComboBox.getSelectedItem().toString();
                 String s2=converterFromComboBox.getSelectedItem().toString();
                 String s3=converterToComboBox.getSelectedItem().toString();
                 String result = object.UnitConversion(s, s1, s2, s3);
                 converterOutputTextField.setText(result);
            }
            
            catch(Exception e)
            {
                //String s1 = e.getMessage();
                //converterOutputTextField.setText(s1);
                converterOutputTextField.setText(""); 
            }
            
        } 
    }//GEN-LAST:event_converterConvertButtonActionPerformed

    private void converterFromComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterFromComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_converterFromComboBoxActionPerformed

    private void converterTwoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterTwoButtonActionPerformed
        // TODO add your handling code here:
        String s1 , s2 , s3 ;
        s1 = converterInputTextField.getText();
        s2 = converterTwoButton.getText();
        s3 = s1+s2;
        converterInputTextField.setText(s3);
    }//GEN-LAST:event_converterTwoButtonActionPerformed

    private void converterSevenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterSevenButtonActionPerformed
        // TODO add your handling code here:
        String s1 , s2 , s3 ;
        s1 = converterInputTextField.getText();
        s2 = converterSevenButton.getText();
        s3 = s1+s2;
        converterInputTextField.setText(s3);
    }//GEN-LAST:event_converterSevenButtonActionPerformed

    private void converterNineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterNineButtonActionPerformed
        // TODO add your handling code here:
        String s1 , s2 , s3 ;
        s1 = converterInputTextField.getText();
        s2 = converterNineButton.getText();
        s3 = s1+s2;
        converterInputTextField.setText(s3);
    }//GEN-LAST:event_converterNineButtonActionPerformed

    private void converterThreeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterThreeButtonActionPerformed
        // TODO add your handling code here:
        String s1 , s2 , s3 ;
        s1 = converterInputTextField.getText();
        s2 = converterThreeButton.getText();
        s3 = s1+s2;
        converterInputTextField.setText(s3);
    }//GEN-LAST:event_converterThreeButtonActionPerformed

    private void converterOneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterOneButtonActionPerformed
        // TODO add your handling code here:
        String s1 , s2 , s3 ;
        s1 = converterInputTextField.getText();
        s2 = converterOneButton.getText();
        s3 = s1+s2;
        converterInputTextField.setText(s3);
    }//GEN-LAST:event_converterOneButtonActionPerformed

    private void converterFourButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterFourButtonActionPerformed
        // TODO add your handling code here:
        String s1 , s2 , s3 ;
        s1 = converterInputTextField.getText();
        s2 = converterFourButton.getText();
        s3 = s1+s2;
        converterInputTextField.setText(s3);
    }//GEN-LAST:event_converterFourButtonActionPerformed

    private void converterFiveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterFiveButtonActionPerformed
        // TODO add your handling code here:
        String s1 , s2 , s3 ;
        s1 = converterInputTextField.getText();
        s2 = converterFiveButton.getText();
        s3 = s1+s2;
        converterInputTextField.setText(s3);
    }//GEN-LAST:event_converterFiveButtonActionPerformed

    private void converterSixButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterSixButtonActionPerformed
        // TODO add your handling code here:
        String s1 , s2 , s3 ;
        s1 = converterInputTextField.getText();
        s2 = converterSixButton.getText();
        s3 = s1+s2;
        converterInputTextField.setText(s3);
    }//GEN-LAST:event_converterSixButtonActionPerformed

    private void converterEightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterEightButtonActionPerformed
        // TODO add your handling code here:
        String s1 , s2 , s3 ;
        s1 = converterInputTextField.getText();
        s2 = converterEightButton.getText();
        s3 = s1+s2;
        converterInputTextField.setText(s3);
    }//GEN-LAST:event_converterEightButtonActionPerformed

    private void converterZeroButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterZeroButtonActionPerformed
        // TODO add your handling code here:
        String s1 , s2 , s3 ;
        s1 = converterInputTextField.getText();
        s2 = converterZeroButton.getText();
        s3 = s1+s2;
        converterInputTextField.setText(s3);
    }//GEN-LAST:event_converterZeroButtonActionPerformed

    private void converterDecimalPointButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterDecimalPointButtonActionPerformed
        // TODO add your handling code here:
        if(converterDecimalPointClickFlag==0)
        {
            String s1 , s2 , s3 ;
            s1 = converterInputTextField.getText();
            s2 = converterDecimalPointButton.getText();
            s3 = s1+s2;
            converterInputTextField.setText(s3);
            converterDecimalPointClickFlag=1;
        }
    }//GEN-LAST:event_converterDecimalPointButtonActionPerformed

    private void converterNegativeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterNegativeButtonActionPerformed
        // TODO add your handling code here:
        String s0=converterInputTextField.getText();
        if(converterNegativeClickFlag==0&&s0.equals(""))
        {
            String s1 , s2 , s3 ;
            s2 = converterNegativeButton.getText();
            s1 = converterInputTextField.getText();
            s3 = s2+s1;
            converterInputTextField.setText(s3);
            converterNegativeClickFlag=1;
        }
        
    }//GEN-LAST:event_converterNegativeButtonActionPerformed

    private void converterClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterClearButtonActionPerformed
        // TODO add your handling code here:
        converterNegativeClickFlag=0;
        converterDecimalPointClickFlag=0;
        String s1="";
        converterInputTextField.setText(s1);
        converterOutputTextField.setText(s1);
    }//GEN-LAST:event_converterClearButtonActionPerformed

    private void converterBackspaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterBackspaceButtonActionPerformed
        // TODO add your handling code here:
        int isInputEmptyFlag=0;
        converterDecimalPointClickFlag=0;
        String s0 = converterInputTextField.getText();
        if(s0.equals(""))
        {
            isInputEmptyFlag=1;
        }
        if(isInputEmptyFlag==0)
        {
            String oldString,newString;
            oldString=converterInputTextField.getText();
            int oldStringLength = oldString.length();
            int index = oldStringLength-1;
            newString=oldString.substring(0,index);
            converterInputTextField.setText(newString);
        }
    }//GEN-LAST:event_converterBackspaceButtonActionPerformed

    private void converterUnitComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_converterUnitComboBoxActionPerformed
        // TODO add your handling code here:
        
        //get the string from unit combo box
        converterUnitString=converterUnitComboBox.getSelectedItem().toString();
        
        //match it inside if else block

        //Torque
        if(converterUnitString.equals("Torque"))
        {
            converterFromComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterTorqueItemList));
            converterToComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterTorqueItemList));      
        }
        //Angle
        else if(converterUnitString.equals("Angle"))
        {
            converterFromComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterAngleItemList));
            converterToComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterAngleItemList)); 
        }
        //Density
        else if(converterUnitString.equals("Density"))
        {
            converterFromComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterDensityItemList));
            converterToComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterDensityItemList)); 
        }
        //Time
        else if(converterUnitString.equals("Time"))
        {
            converterFromComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterTimeItemList));
            converterToComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterTimeItemList)); 
        }
        //Temperature
        else if(converterUnitString.equals("Temperature"))
        {
            converterFromComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterTemperatureItemList));
            converterToComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterTemperatureItemList)); 
        }
        //Speed
        else if(converterUnitString.equals("Speed"))
        {
            converterFromComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterSpeedItemList));
            converterToComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterSpeedItemList)); 
        }
        //Weight
        else if(converterUnitString.equals("Weight"))
        {
            converterFromComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterWeightItemList));
            converterToComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterWeightItemList)); 
        }
        //Volume
        else if(converterUnitString.equals("Volume"))
        {
            converterFromComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterVolumeItemList));
            converterToComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterVolumeItemList)); 
        }
        //Length
        else if(converterUnitString.equals("Length"))
        {
            converterFromComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterLengthItemList));
            converterToComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterLengthItemList)); 
        }
        //Pressure
        else if(converterUnitString.equals("Pressure"))
        {
            converterFromComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterPressureItemList));
            converterToComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterPressureItemList)); 
        }
        //Area
        else if(converterUnitString.equals("Area"))
        {
            converterFromComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterAreaItemList));
            converterToComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterAreaItemList)); 
        }
        //Empty
        else
        {
            converterFromComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterEmptyItemList));
            converterToComboBox.setModel(new javax.swing.DefaultComboBoxModel(converterEmptyItemList));      
        }
    }//GEN-LAST:event_converterUnitComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CONVERTER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CONVERTER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CONVERTER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CONVERTER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() 
            {
                try 
                {
                    new CONVERTER().setVisible(true);
                } 
                catch (Exception ex)
                {
                    //Logger.getLogger(CONVERTER.class.getName()).log(Level.SEVERE, null, ex);
                    
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton converterBackToMenuButton;
    private javax.swing.JButton converterBackspaceButton;
    private javax.swing.JButton converterClearButton;
    private javax.swing.JButton converterConvertButton;
    private javax.swing.JButton converterDecimalPointButton;
    private javax.swing.JButton converterEightButton;
    private javax.swing.JButton converterFiveButton;
    private javax.swing.JButton converterFourButton;
    private javax.swing.JComboBox<String> converterFromComboBox;
    private javax.swing.JLabel converterFromLabel;
    private javax.swing.JTextField converterInputTextField;
    private javax.swing.JButton converterNegativeButton;
    private javax.swing.JButton converterNineButton;
    private javax.swing.JButton converterOneButton;
    private javax.swing.JTextField converterOutputTextField;
    private javax.swing.JButton converterSevenButton;
    private javax.swing.JButton converterSixButton;
    private javax.swing.JButton converterThreeButton;
    private javax.swing.JComboBox<String> converterToComboBox;
    private javax.swing.JLabel converterToLabel;
    private javax.swing.JButton converterTwoButton;
    private javax.swing.JComboBox<String> converterUnitComboBox;
    private javax.swing.JLabel converterUnitLabel;
    private javax.swing.JButton converterZeroButton;
    // End of variables declaration//GEN-END:variables
}