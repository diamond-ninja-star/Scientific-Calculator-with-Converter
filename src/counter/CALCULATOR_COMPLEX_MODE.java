package counter;

import java.io.*;
import flanagan.complex.*;

public class CALCULATOR_COMPLEX_MODE extends javax.swing.JFrame
{
    public String realPartOfComplexNumber(String complexNumberString)
    {
        if(complexNumberString.contains("+j")||complexNumberString.contains("-j"))
        {
            if(complexNumberString.contains("+j"))
            {
                return complexNumberString.substring(0, complexNumberString.indexOf('+'));
            }
            else if(complexNumberString.contains("-j"))
            {
                return complexNumberString.substring(0, complexNumberString.indexOf('-'));      
            }
        }
        return "";
    }
    
    public String imaginaryPartOfComplexNumber(String complexNumberString)
    {
        if(complexNumberString.contains("+j")||complexNumberString.contains("-j"))
        {
            int jIndex = complexNumberString.indexOf("j");
            int lastIndex = complexNumberString.length();
            if(complexNumberString.contains("+j"))
            {
                return complexNumberString.substring(jIndex+1, lastIndex);
            }
            else if(complexNumberString.contains("-j"))
            {
                return "-"+complexNumberString.substring(jIndex+1, lastIndex);
            }
        }
        return "";
    }
   
    public CALCULATOR_COMPLEX_MODE()
    {
        initComponents();
        getContentPane().setBackground(java.awt.Color.BLUE);
    }

    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        complexInputTextField1 = new javax.swing.JTextField();
        complexInputTextField2 = new javax.swing.JTextField();
        complexOutputTextField = new javax.swing.JTextField();
        complexAddButton = new javax.swing.JButton();
        complexSubtractionButton = new javax.swing.JButton();
        complexSwapButton = new javax.swing.JButton();
        complexConjugateButton = new javax.swing.JButton();
        complexArgumentInRadianButton = new javax.swing.JButton();
        complexPowerButton = new javax.swing.JButton();
        complexLogarithmButton = new javax.swing.JButton();
        complexArgumentInDegreeButton = new javax.swing.JButton();
        complexAbsoluteValueButton = new javax.swing.JButton();
        complexNthRootButton = new javax.swing.JButton();
        complexNegationButton = new javax.swing.JButton();
        complexAnswerButton = new javax.swing.JButton();
        complexArcSineButton = new javax.swing.JButton();
        complexArcCosineButton = new javax.swing.JButton();
        complexArcTangentButton = new javax.swing.JButton();
        complexArcCotangentButton = new javax.swing.JButton();
        complexArcSecantButton = new javax.swing.JButton();
        complexArcCosecantButton = new javax.swing.JButton();
        complexHyperbolicSineButton = new javax.swing.JButton();
        complexHyperbolicCosineButton = new javax.swing.JButton();
        complexHyperbolicTangentButton = new javax.swing.JButton();
        complexHyperbolicCotangentButton = new javax.swing.JButton();
        complexHyperbolicSecantButton = new javax.swing.JButton();
        complexHyperbolicCosecantButton = new javax.swing.JButton();
        complexArcHyperbolicSineButton = new javax.swing.JButton();
        complexArcHyperbolicCosineButton = new javax.swing.JButton();
        complexArcHyperbolicTangentButton = new javax.swing.JButton();
        complexArcHyperbolicCotangentButton = new javax.swing.JButton();
        complexArcHyperbolicSecantButton = new javax.swing.JButton();
        complexArcHyperbolicCosecantButton = new javax.swing.JButton();
        complexSineButton = new javax.swing.JButton();
        complexCosineButton = new javax.swing.JButton();
        complexTangentButton = new javax.swing.JButton();
        complexCotangentButton = new javax.swing.JButton();
        complexSecantButton = new javax.swing.JButton();
        complexCosecantButton = new javax.swing.JButton();
        complexBackToMenuButton = new javax.swing.JButton();
        complexClearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("COMPLEX CALCULATOR");
        setFont(new java.awt.Font("Lucida Console", 1, 10)); // NOI18N
        setName("CALCULATOR_COMPLEX_MODE_Frame"); // NOI18N

        complexInputTextField1.setBackground(new java.awt.Color(0, 0, 0));
        complexInputTextField1.setFont(new java.awt.Font("Lucida Console", 1, 15)); // NOI18N
        complexInputTextField1.setForeground(new java.awt.Color(0, 255, 0));

        complexInputTextField2.setBackground(new java.awt.Color(0, 0, 0));
        complexInputTextField2.setFont(new java.awt.Font("Lucida Console", 1, 15)); // NOI18N
        complexInputTextField2.setForeground(new java.awt.Color(0, 255, 0));

        complexOutputTextField.setEditable(false);
        complexOutputTextField.setBackground(new java.awt.Color(0, 0, 0));
        complexOutputTextField.setFont(new java.awt.Font("Lucida Console", 1, 15)); // NOI18N
        complexOutputTextField.setForeground(new java.awt.Color(0, 255, 0));

        complexAddButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexAddButton.setText("ADD");
        complexAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexAddButtonActionPerformed(evt);
            }
        });

        complexSubtractionButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexSubtractionButton.setText("SUBTRACTION");
        complexSubtractionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexSubtractionButtonActionPerformed(evt);
            }
        });

        complexSwapButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexSwapButton.setText("SWAP");
        complexSwapButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexSwapButtonActionPerformed(evt);
            }
        });

        complexConjugateButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexConjugateButton.setText("CONJUGATE");
        complexConjugateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexConjugateButtonActionPerformed(evt);
            }
        });

        complexArgumentInRadianButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexArgumentInRadianButton.setText("RADIAN ARGUMENT");
        complexArgumentInRadianButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexArgumentInRadianButtonActionPerformed(evt);
            }
        });

        complexPowerButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexPowerButton.setText("POWER");
        complexPowerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexPowerButtonActionPerformed(evt);
            }
        });

        complexLogarithmButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexLogarithmButton.setText("LOG");
        complexLogarithmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexLogarithmButtonActionPerformed(evt);
            }
        });

        complexArgumentInDegreeButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexArgumentInDegreeButton.setText("DEGREE ARGUMENT");
        complexArgumentInDegreeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexArgumentInDegreeButtonActionPerformed(evt);
            }
        });

        complexAbsoluteValueButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexAbsoluteValueButton.setText("ABSOLUTE");
        complexAbsoluteValueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexAbsoluteValueButtonActionPerformed(evt);
            }
        });

        complexNthRootButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexNthRootButton.setText("ROOT");
        complexNthRootButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexNthRootButtonActionPerformed(evt);
            }
        });

        complexNegationButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexNegationButton.setText("NEGATION");
        complexNegationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexNegationButtonActionPerformed(evt);
            }
        });

        complexAnswerButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexAnswerButton.setText("ANSWER");
        complexAnswerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexAnswerButtonActionPerformed(evt);
            }
        });

        complexArcSineButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexArcSineButton.setText("asin");
        complexArcSineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexArcSineButtonActionPerformed(evt);
            }
        });

        complexArcCosineButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexArcCosineButton.setText("acos");
        complexArcCosineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexArcCosineButtonActionPerformed(evt);
            }
        });

        complexArcTangentButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexArcTangentButton.setText("atan");
        complexArcTangentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexArcTangentButtonActionPerformed(evt);
            }
        });

        complexArcCotangentButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexArcCotangentButton.setText("acot");
        complexArcCotangentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexArcCotangentButtonActionPerformed(evt);
            }
        });

        complexArcSecantButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexArcSecantButton.setText("asec");
        complexArcSecantButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexArcSecantButtonActionPerformed(evt);
            }
        });

        complexArcCosecantButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexArcCosecantButton.setText("acosec");
        complexArcCosecantButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexArcCosecantButtonActionPerformed(evt);
            }
        });

        complexHyperbolicSineButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexHyperbolicSineButton.setText("sinh");
        complexHyperbolicSineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexHyperbolicSineButtonActionPerformed(evt);
            }
        });

        complexHyperbolicCosineButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexHyperbolicCosineButton.setText("cosh");
        complexHyperbolicCosineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexHyperbolicCosineButtonActionPerformed(evt);
            }
        });

        complexHyperbolicTangentButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexHyperbolicTangentButton.setText("tanh");
        complexHyperbolicTangentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexHyperbolicTangentButtonActionPerformed(evt);
            }
        });

        complexHyperbolicCotangentButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexHyperbolicCotangentButton.setText("coth");
        complexHyperbolicCotangentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexHyperbolicCotangentButtonActionPerformed(evt);
            }
        });

        complexHyperbolicSecantButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexHyperbolicSecantButton.setText("sech");
        complexHyperbolicSecantButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexHyperbolicSecantButtonActionPerformed(evt);
            }
        });

        complexHyperbolicCosecantButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexHyperbolicCosecantButton.setText("cosech");
        complexHyperbolicCosecantButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexHyperbolicCosecantButtonActionPerformed(evt);
            }
        });

        complexArcHyperbolicSineButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexArcHyperbolicSineButton.setText("asinh");
        complexArcHyperbolicSineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexArcHyperbolicSineButtonActionPerformed(evt);
            }
        });

        complexArcHyperbolicCosineButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexArcHyperbolicCosineButton.setText("acosh");
        complexArcHyperbolicCosineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexArcHyperbolicCosineButtonActionPerformed(evt);
            }
        });

        complexArcHyperbolicTangentButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexArcHyperbolicTangentButton.setText("atanh");
        complexArcHyperbolicTangentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexArcHyperbolicTangentButtonActionPerformed(evt);
            }
        });

        complexArcHyperbolicCotangentButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexArcHyperbolicCotangentButton.setText("acoth");
        complexArcHyperbolicCotangentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexArcHyperbolicCotangentButtonActionPerformed(evt);
            }
        });

        complexArcHyperbolicSecantButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexArcHyperbolicSecantButton.setText("asech");
        complexArcHyperbolicSecantButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexArcHyperbolicSecantButtonActionPerformed(evt);
            }
        });

        complexArcHyperbolicCosecantButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexArcHyperbolicCosecantButton.setText("acosech");
        complexArcHyperbolicCosecantButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexArcHyperbolicCosecantButtonActionPerformed(evt);
            }
        });

        complexSineButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexSineButton.setText("sin");
        complexSineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexSineButtonActionPerformed(evt);
            }
        });

        complexCosineButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexCosineButton.setText("cos");
        complexCosineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexCosineButtonActionPerformed(evt);
            }
        });

        complexTangentButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexTangentButton.setText("tan");
        complexTangentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexTangentButtonActionPerformed(evt);
            }
        });

        complexCotangentButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexCotangentButton.setText("cot");
        complexCotangentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexCotangentButtonActionPerformed(evt);
            }
        });

        complexSecantButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexSecantButton.setText("sec");
        complexSecantButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexSecantButtonActionPerformed(evt);
            }
        });

        complexCosecantButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexCosecantButton.setText("cosec");
        complexCosecantButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexCosecantButtonActionPerformed(evt);
            }
        });

        complexBackToMenuButton.setBackground(new java.awt.Color(0, 0, 0));
        complexBackToMenuButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexBackToMenuButton.setForeground(new java.awt.Color(0, 255, 0));
        complexBackToMenuButton.setText("MENU");
        complexBackToMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexBackToMenuButtonActionPerformed(evt);
            }
        });

        complexClearButton.setFont(new java.awt.Font("Lucida Console", 1, 11)); // NOI18N
        complexClearButton.setText("CLEAR");
        complexClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complexClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(complexInputTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(complexInputTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(complexOutputTextField)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(complexLogarithmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexNegationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexCosecantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(complexNthRootButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexConjugateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexSecantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(complexAnswerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexAbsoluteValueButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexCotangentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(complexAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexArgumentInRadianButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexSineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(complexPowerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexArgumentInDegreeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexCosineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(complexSwapButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexSubtractionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexTangentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(complexArcCosecantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexHyperbolicCosecantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexArcHyperbolicCosecantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(complexArcCotangentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexHyperbolicCotangentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexArcHyperbolicCotangentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(complexArcSineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexHyperbolicSineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexArcHyperbolicSineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(complexArcCosineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexHyperbolicCosineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexArcHyperbolicCosineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(complexArcTangentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexHyperbolicTangentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexArcHyperbolicTangentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(complexArcSecantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexHyperbolicSecantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(complexArcHyperbolicSecantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(complexBackToMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(complexClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(complexInputTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexInputTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(complexOutputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(complexBackToMenuButton, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(complexClearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(complexArcSineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexHyperbolicSineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexArcHyperbolicSineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexSineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexArgumentInRadianButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(complexArcCosineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexHyperbolicCosineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexArcHyperbolicCosineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexCosineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexArgumentInDegreeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexPowerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(complexArcTangentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexHyperbolicTangentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexArcHyperbolicTangentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexTangentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexSubtractionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexSwapButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(complexArcCotangentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexHyperbolicCotangentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexArcHyperbolicCotangentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexCotangentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexAbsoluteValueButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexAnswerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(complexArcSecantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexHyperbolicSecantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexArcHyperbolicSecantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexSecantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexConjugateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexNthRootButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(complexArcCosecantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexHyperbolicCosecantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexArcHyperbolicCosecantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexCosecantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexNegationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complexLogarithmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(690, 377));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void complexLogarithmButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexLogarithmButtonActionPerformed
    {//GEN-HEADEREND:event_complexLogarithmButtonActionPerformed
        // TODO add your handling code here:
        String s1 = complexInputTextField1.getText();
        int checkerFlag = 0;
        if(s1.equals(""))
        {
            checkerFlag=1;
        }
        if(checkerFlag==0)
        {
            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.log(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
        /*
        if(checkerFlag==0)
        {
            try
            {
                double x1 , y1  ;
                x1 = Integer.parseInt(realPartOfComplexNumber(s1));
                y1 = Integer.parseInt(imaginaryPartOfComplexNumber(s1));
                Complex z1 = new Complex(x1,y1);
                Complex z = Complex.log(z1);
                oTF.setText(""+z.toString());

            }
            catch(Exception ex)
            {

            }
        }
        */
    }//GEN-LAST:event_complexLogarithmButtonActionPerformed

    private void complexPowerButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexPowerButtonActionPerformed
    {//GEN-HEADEREND:event_complexPowerButtonActionPerformed
        // TODO add your handling code here:

        String s1 = complexInputTextField1.getText();
        String s2 = complexInputTextField2.getText();
        int checkerFlag = 0;
        if(s1.equals("")||s2.equals(""))
        {
            checkerFlag=1;
        }
        if(checkerFlag==0)
        {
            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.valueOf(s2);
                Complex z = Complex.pow(z1, z2);
                complexOutputTextField.setText(Complex.toString(z));
            }
            catch(Exception e)
            {
                
            }
        }
        /*
        if(checkerFlag==0)
        {
            try
            {
                double x1 , y1 , x2 , y2 ;
                x1 = Integer.parseInt(realPartOfComplexNumber(s1));
                y1 = Integer.parseInt(imaginaryPartOfComplexNumber(s1));
                x2 = Integer.parseInt(realPartOfComplexNumber(s2));
                y2 = Integer.parseInt(imaginaryPartOfComplexNumber(s2));
                Complex z1 = new Complex(x1,y1);
                Complex z2 = new Complex(x2,y2);
                Complex z3 = Complex.pow(z1, z2);

                String finalString = z3.toString();

                oTF.setText(finalString);

            }
            catch(Exception ex)
            {

            }

        }
        */
    }//GEN-LAST:event_complexPowerButtonActionPerformed

    private void complexArgumentInRadianButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexArgumentInRadianButtonActionPerformed
    {//GEN-HEADEREND:event_complexArgumentInRadianButtonActionPerformed
        // TODO add your handling code here:
        String s1 = complexInputTextField1.getText();
        complexInputTextField2.setText("");
        int checkerFlag = 0;
        if(s1.equals(""))
        {
            checkerFlag=1;
        }
        if(checkerFlag==0)
        {
            try
            {
                Complex z1 = Complex.valueOf(s1);
                double result = Complex.argRad(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Double.toString(result));
            }
            catch(Exception e)
            {
                
            }
        }
        /*
        if(checkerFlag==0)
        {
            try
            {
                double x1 , y1  ;
                x1 = Integer.parseInt(realPartOfComplexNumber(s1));
                y1 = Integer.parseInt(imaginaryPartOfComplexNumber(s1));
                Complex z1 = new Complex(x1,y1);
                double z = Complex.arg(z1);
                oTF.setText(""+z);

            }
            catch(Exception ex)
            {

            }
        }
        */
    }//GEN-LAST:event_complexArgumentInRadianButtonActionPerformed

    private void complexConjugateButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexConjugateButtonActionPerformed
    {//GEN-HEADEREND:event_complexConjugateButtonActionPerformed
        // TODO add your handling code here:
        String s1 = complexInputTextField1.getText();
        int checkerFlag = 0;
        if(s1.equals(""))
        {
            checkerFlag=1;
        }
        if(checkerFlag==0)
        {
            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.conjugate(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
        /*
        if(checkerFlag==0)
        {
            try
            {
        
                double x1 , y1  ;
                x1 = Integer.parseInt(realPartOfComplexNumber(s1));
                y1 = Integer.parseInt(imaginaryPartOfComplexNumber(s1));
                Complex z1 = new Complex(x1,y1);
                Complex  z = Complex.conjugate(z1);
                iTF2.setText("");
                oTF.setText(z.toString());

            }
            catch(Exception ex)
            {

            }
        }
        */
    }//GEN-LAST:event_complexConjugateButtonActionPerformed

    private void complexSwapButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexSwapButtonActionPerformed
    {//GEN-HEADEREND:event_complexSwapButtonActionPerformed
        // TODO add your handling code here:

        String s1 = complexInputTextField1.getText();
        String s2 = complexInputTextField2.getText();
        int checkerFlag = 0;
        if(s1.equals("")||s2.equals(""))
        {
            checkerFlag=1;
        }
        if(checkerFlag==0)
        {
            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.valueOf(s2);
                Complex.swap(z1,z2);
                complexInputTextField1.setText(Complex.toString(z1));
                complexInputTextField2.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
        /*
        if(checkerFlag==0)
        {
            try
            {
                double x1 , y1 , x2 , y2 ;
                x1 = Integer.parseInt(realPartOfComplexNumber(s1));
                y1 = Integer.parseInt(imaginaryPartOfComplexNumber(s1));
                x2 = Integer.parseInt(realPartOfComplexNumber(s2));
                y2 = Integer.parseInt(imaginaryPartOfComplexNumber(s2));
                Complex z1 = new Complex(x1,y1);
                Complex z2 = new Complex(x2,y2);
                Complex.swap(z1, z2);

                iTF1.setText(z1.toString());
                iTF2.setText(z2.toString());

            }
            catch(Exception ex)
            {

            }

        }
        */
    }//GEN-LAST:event_complexSwapButtonActionPerformed

    private void complexSubtractionButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexSubtractionButtonActionPerformed
    {//GEN-HEADEREND:event_complexSubtractionButtonActionPerformed
        // TODO add your handling code here:

        String s1 = complexInputTextField1.getText();
        String s2 = complexInputTextField2.getText();
        int checkerFlag = 0;
        if(s1.equals("")||s2.equals(""))
        {
            checkerFlag=1;
        }
        if(checkerFlag==0)
        {
            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.valueOf(s2);
                Complex z = Complex.minus(z1, z2);
                complexOutputTextField.setText(Complex.toString(z));
            }
            catch(Exception e)
            {
                
            }
        }
        /*
        if(checkerFlag==0)
        {
            try
            {
                double x1 , y1 , x2 , y2 ;
                x1 = Integer.parseInt(realPartOfComplexNumber(s1));
                y1 = Integer.parseInt(imaginaryPartOfComplexNumber(s1));
                x2 = Integer.parseInt(realPartOfComplexNumber(s2));
                y2 = Integer.parseInt(imaginaryPartOfComplexNumber(s2));
                Complex z1 = new Complex(x1,y1);
                Complex z2 = new Complex(x2,y2);
                Complex z3 = Complex.minus(z1, z2);

                String finalString = z3.toString();

                oTF.setText(finalString);

            }
            catch(Exception ex)
            {

            }

        }
        */
    }//GEN-LAST:event_complexSubtractionButtonActionPerformed

    private void complexAddButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexAddButtonActionPerformed
    {//GEN-HEADEREND:event_complexAddButtonActionPerformed
        // TODO add your handling code here:

        String s1 = complexInputTextField1.getText();
        String s2 = complexInputTextField2.getText();
        int checkerFlag = 0;
        if(s1.equals("")||s2.equals(""))
        {
            checkerFlag=1;
        }
        if(checkerFlag==0)
        {
            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.valueOf(s2);
                Complex z = Complex.plus(z1, z2);
                complexOutputTextField.setText(Complex.toString(z));
            }
            catch(Exception e)
            {
                
            }
        }
        /*
        if(checkerFlag==0)
        {
            try
            {
                double x1 , y1 , x2 , y2 ;
                x1 = Integer.parseInt(realPartOfComplexNumber(s1));
                y1 = Integer.parseInt(imaginaryPartOfComplexNumber(s1));
                x2 = Integer.parseInt(realPartOfComplexNumber(s2));
                y2 = Integer.parseInt(imaginaryPartOfComplexNumber(s2));
                Complex z1 = new Complex(x1,y1);
                Complex z2 = new Complex(x2,y2);
                Complex z3 = Complex.plus(z1, z2);

                String finalString = z3.toString();

                oTF.setText(finalString);

            }
            catch(Exception ex)
            {

            }

        }
        */
    }//GEN-LAST:event_complexAddButtonActionPerformed

    private void complexArgumentInDegreeButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexArgumentInDegreeButtonActionPerformed
    {//GEN-HEADEREND:event_complexArgumentInDegreeButtonActionPerformed
        // TODO add your handling code here:
        String s1 = complexInputTextField1.getText();
        complexInputTextField2.setText("");
        int checkerFlag = 0;
        if(s1.equals(""))
        {
            checkerFlag=1;
        }
        if(checkerFlag==0)
        {
            try
            {
                Complex z1 = Complex.valueOf(s1);
                double result = Complex.argDeg(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Double.toString(result));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexArgumentInDegreeButtonActionPerformed

    private void complexAbsoluteValueButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexAbsoluteValueButtonActionPerformed
    {//GEN-HEADEREND:event_complexAbsoluteValueButtonActionPerformed
        // TODO add your handling code here:
        String s1 = complexInputTextField1.getText();
        complexInputTextField2.setText("");
        int checkerFlag = 0;
        if(s1.equals(""))
        {
            checkerFlag=1;
        }
        if(checkerFlag==0)
        {
            try
            {
                Complex z1 = Complex.valueOf(s1);
                double result = Complex.abs(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Double.toString(result));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexAbsoluteValueButtonActionPerformed

    private void complexNthRootButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexNthRootButtonActionPerformed
    {//GEN-HEADEREND:event_complexNthRootButtonActionPerformed
        // TODO add your handling code here:
        String s1 = complexInputTextField1.getText();
        String s2 = complexInputTextField2.getText();
        int checkerFlag = 0;
        if(s1.equals("")||s2.equals(""))
        {
            checkerFlag=1;
        }
        if(checkerFlag==0)
        {
            try
            {
                Complex z1 = Complex.valueOf(s1);
                int times = Integer.parseInt(s2);
                Complex z = Complex.nthRoot(z1,times);
                complexOutputTextField.setText(Complex.toString(z));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexNthRootButtonActionPerformed

    private void complexAnswerButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexAnswerButtonActionPerformed
    {//GEN-HEADEREND:event_complexAnswerButtonActionPerformed
        // TODO add your handling code here:
        String s1 = complexOutputTextField.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {
            try
            {
                complexInputTextField2.setText("");
                complexInputTextField1.setText(s1);
            }
            catch(Exception e)
            {
                
            }           
        }
    }//GEN-LAST:event_complexAnswerButtonActionPerformed

    private void complexCosecantButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexCosecantButtonActionPerformed
    {//GEN-HEADEREND:event_complexCosecantButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.csc(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexCosecantButtonActionPerformed

    private void complexCosineButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexCosineButtonActionPerformed
    {//GEN-HEADEREND:event_complexCosineButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.cos(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexCosineButtonActionPerformed

    private void complexArcCosineButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexArcCosineButtonActionPerformed
    {//GEN-HEADEREND:event_complexArcCosineButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.acos(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexArcCosineButtonActionPerformed

    private void complexArcHyperbolicCosineButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexArcHyperbolicCosineButtonActionPerformed
    {//GEN-HEADEREND:event_complexArcHyperbolicCosineButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.acosh(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexArcHyperbolicCosineButtonActionPerformed

    private void complexTangentButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexTangentButtonActionPerformed
    {//GEN-HEADEREND:event_complexTangentButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.tan(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexTangentButtonActionPerformed

    private void complexArcTangentButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexArcTangentButtonActionPerformed
    {//GEN-HEADEREND:event_complexArcTangentButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.atan(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexArcTangentButtonActionPerformed

    private void complexArcCotangentButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexArcCotangentButtonActionPerformed
    {//GEN-HEADEREND:event_complexArcCotangentButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.acot(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
        
    }//GEN-LAST:event_complexArcCotangentButtonActionPerformed

    private void complexArcHyperbolicSecantButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexArcHyperbolicSecantButtonActionPerformed
    {//GEN-HEADEREND:event_complexArcHyperbolicSecantButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.asech(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexArcHyperbolicSecantButtonActionPerformed

    private void complexArcHyperbolicCosecantButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexArcHyperbolicCosecantButtonActionPerformed
    {//GEN-HEADEREND:event_complexArcHyperbolicCosecantButtonActionPerformed
        // TODO add your handling code here:
        String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.acsch(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexArcHyperbolicCosecantButtonActionPerformed

    private void complexSineButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexSineButtonActionPerformed
    {//GEN-HEADEREND:event_complexSineButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.sin(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexSineButtonActionPerformed

    private void complexCotangentButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexCotangentButtonActionPerformed
    {//GEN-HEADEREND:event_complexCotangentButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.cot(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexCotangentButtonActionPerformed

    private void complexSecantButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexSecantButtonActionPerformed
    {//GEN-HEADEREND:event_complexSecantButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.sec(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexSecantButtonActionPerformed

    private void complexArcSineButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexArcSineButtonActionPerformed
    {//GEN-HEADEREND:event_complexArcSineButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.asin(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexArcSineButtonActionPerformed

    private void complexArcSecantButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexArcSecantButtonActionPerformed
    {//GEN-HEADEREND:event_complexArcSecantButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.asec(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexArcSecantButtonActionPerformed

    private void complexArcCosecantButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexArcCosecantButtonActionPerformed
    {//GEN-HEADEREND:event_complexArcCosecantButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.acsc(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexArcCosecantButtonActionPerformed

    private void complexHyperbolicSineButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexHyperbolicSineButtonActionPerformed
    {//GEN-HEADEREND:event_complexHyperbolicSineButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.sinh(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexHyperbolicSineButtonActionPerformed

    private void complexHyperbolicCosineButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexHyperbolicCosineButtonActionPerformed
    {//GEN-HEADEREND:event_complexHyperbolicCosineButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.cosh(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexHyperbolicCosineButtonActionPerformed

    private void complexHyperbolicTangentButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexHyperbolicTangentButtonActionPerformed
    {//GEN-HEADEREND:event_complexHyperbolicTangentButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.tanh(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexHyperbolicTangentButtonActionPerformed

    private void complexHyperbolicCotangentButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexHyperbolicCotangentButtonActionPerformed
    {//GEN-HEADEREND:event_complexHyperbolicCotangentButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.coth(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexHyperbolicCotangentButtonActionPerformed

    private void complexHyperbolicSecantButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexHyperbolicSecantButtonActionPerformed
    {//GEN-HEADEREND:event_complexHyperbolicSecantButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.sech(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexHyperbolicSecantButtonActionPerformed

    private void complexHyperbolicCosecantButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexHyperbolicCosecantButtonActionPerformed
    {//GEN-HEADEREND:event_complexHyperbolicCosecantButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.csch(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexHyperbolicCosecantButtonActionPerformed

    private void complexArcHyperbolicSineButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexArcHyperbolicSineButtonActionPerformed
    {//GEN-HEADEREND:event_complexArcHyperbolicSineButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.asinh(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexArcHyperbolicSineButtonActionPerformed

    private void complexArcHyperbolicTangentButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexArcHyperbolicTangentButtonActionPerformed
    {//GEN-HEADEREND:event_complexArcHyperbolicTangentButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.atanh(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexArcHyperbolicTangentButtonActionPerformed

    private void complexArcHyperbolicCotangentButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexArcHyperbolicCotangentButtonActionPerformed
    {//GEN-HEADEREND:event_complexArcHyperbolicCotangentButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int flag = 0;
        if(s1.equals(""))
        {
            flag=1;
        }
        if(flag==0)
        {

            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.acoth(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexArcHyperbolicCotangentButtonActionPerformed

    private void complexBackToMenuButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexBackToMenuButtonActionPerformed
    {//GEN-HEADEREND:event_complexBackToMenuButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Menu object = new Menu();
        object.setVisible(true);
    }//GEN-LAST:event_complexBackToMenuButtonActionPerformed

    private void complexNegationButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexNegationButtonActionPerformed
    {//GEN-HEADEREND:event_complexNegationButtonActionPerformed
        // TODO add your handling code here:
                String s1 = complexInputTextField1.getText();
        int checkerFlag = 0;
        if(s1.equals(""))
        {
            checkerFlag=1;
        }
        if(checkerFlag==0)
        {
            try
            {
                Complex z1 = Complex.valueOf(s1);
                Complex z2 = Complex.negate(z1);
                complexInputTextField2.setText("");
                complexOutputTextField.setText(Complex.toString(z2));
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_complexNegationButtonActionPerformed

    private void complexClearButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_complexClearButtonActionPerformed
    {//GEN-HEADEREND:event_complexClearButtonActionPerformed
        // TODO add your handling code here:
        complexInputTextField1.setText("");
        complexInputTextField2.setText("");
        complexOutputTextField.setText("");
    }//GEN-LAST:event_complexClearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(CALCULATOR_COMPLEX_MODE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(CALCULATOR_COMPLEX_MODE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(CALCULATOR_COMPLEX_MODE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(CALCULATOR_COMPLEX_MODE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new CALCULATOR_COMPLEX_MODE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton complexAbsoluteValueButton;
    private javax.swing.JButton complexAddButton;
    private javax.swing.JButton complexAnswerButton;
    private javax.swing.JButton complexArcCosecantButton;
    private javax.swing.JButton complexArcCosineButton;
    private javax.swing.JButton complexArcCotangentButton;
    private javax.swing.JButton complexArcHyperbolicCosecantButton;
    private javax.swing.JButton complexArcHyperbolicCosineButton;
    private javax.swing.JButton complexArcHyperbolicCotangentButton;
    private javax.swing.JButton complexArcHyperbolicSecantButton;
    private javax.swing.JButton complexArcHyperbolicSineButton;
    private javax.swing.JButton complexArcHyperbolicTangentButton;
    private javax.swing.JButton complexArcSecantButton;
    private javax.swing.JButton complexArcSineButton;
    private javax.swing.JButton complexArcTangentButton;
    private javax.swing.JButton complexArgumentInDegreeButton;
    private javax.swing.JButton complexArgumentInRadianButton;
    private javax.swing.JButton complexBackToMenuButton;
    private javax.swing.JButton complexClearButton;
    private javax.swing.JButton complexConjugateButton;
    private javax.swing.JButton complexCosecantButton;
    private javax.swing.JButton complexCosineButton;
    private javax.swing.JButton complexCotangentButton;
    private javax.swing.JButton complexHyperbolicCosecantButton;
    private javax.swing.JButton complexHyperbolicCosineButton;
    private javax.swing.JButton complexHyperbolicCotangentButton;
    private javax.swing.JButton complexHyperbolicSecantButton;
    private javax.swing.JButton complexHyperbolicSineButton;
    private javax.swing.JButton complexHyperbolicTangentButton;
    private javax.swing.JTextField complexInputTextField1;
    private javax.swing.JTextField complexInputTextField2;
    private javax.swing.JButton complexLogarithmButton;
    private javax.swing.JButton complexNegationButton;
    private javax.swing.JButton complexNthRootButton;
    private javax.swing.JTextField complexOutputTextField;
    private javax.swing.JButton complexPowerButton;
    private javax.swing.JButton complexSecantButton;
    private javax.swing.JButton complexSineButton;
    private javax.swing.JButton complexSubtractionButton;
    private javax.swing.JButton complexSwapButton;
    private javax.swing.JButton complexTangentButton;
    // End of variables declaration//GEN-END:variables
}
